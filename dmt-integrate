#!/bin/bash

source ~/.dmt/etc/.bash_aliases_bundle # dirsync, colors

printf "     —— ${CYAN}DMT INTEGRATE${NC} ——\n"
printf "${GRAY}Integrate apps into DMT ENGINE${NC}\n"
echo

APP_ROOT_DIR="`pwd`"
#echo "$cwd"
#echo "$SOURCE"

#if [ ! -f "$APP_ROOT_DIR/vite.config.ts" ] || [ ! -d "$APP_ROOT_DIR/dmt" ]; then
if [ ! -d "$APP_ROOT_DIR/dmt" ]; then
  printf "⚠️  ${RED}Please run inside installable dmt app directory${NC}\n"
  exit
fi

# dmt-install -> integrate
if [ -f "./dmt/dmt-integrate" ]; then
  printf "${GREEN}Detected ${MAGENTA}dmt-integrate${NC} script, executing this instead of predefined installer ...${NC}\n"
  printf "${GRAY}${NC}\n"
  ./dmt/dmt-integrate "$@"
  exit
fi

# legacy
if [ -f "./dmt/dmt-install" ]; then
  printf "${GREEN}Detected ${MAGENTA}dmt-install${NC} script, executing this instead of predefined installer ...${NC}\n"
  printf "${GRAY}${NC}\n"
  ./dmt/dmt-install "$@"
  exit
fi

FRONTEND_DIR="${APP_ROOT_DIR}"

if [ -d "$FRONTEND_DIR/frontend" ]; then
  FRONTEND_DIR="${FRONTEND_DIR}/frontend"
fi

#SOURCE="$(cd "$(dirname "$1")"; pwd)/$(basename "$1")"

#cd $SOURCE

SETTINGS="$APP_ROOT_DIR/dmt/settings.json"

if [ ! -f "$SETTINGS" ]; then
  echo $APP_ROOT_DIR
  echo "$(basename $APP_ROOT_DIR)"
  printf "⚠️  ${RED}Missing ${YELLOW}$(basename $APP_ROOT_DIR)/dmt/settings.json ${RED}file${NC}\n"
  exit
fi

printf "${YELLOW}Settings for ${CYAN}$(basename $APP_ROOT_DIR)${NC} =${NC}\n"
cat "$SETTINGS"

# variables
APP_BASE="$(node -pe 'JSON.parse(process.argv[1]).app_base' "$(cat $SETTINGS)")"
BUILD="$(node -pe 'JSON.parse(process.argv[1]).build' "$(cat $SETTINGS)")"
HOOK="$(node -pe 'JSON.parse(process.argv[1]).hook' "$(cat $SETTINGS)")"
TARGET="$(node -pe 'JSON.parse(process.argv[1]).target' "$(cat $SETTINGS)")"

if [ "$APP_BASE" == "undefined" ]; then
  printf "${RED}app_base not set${NC}\n"
  exit
fi

# dmt user apps dir
DMT_APPS_TARGET="$HOME/.dmt/user/apps"

if [ "$TARGET" == "here" ]; then
  DMT_APPS_TARGET="$HOME/.dmt-here/apps"
fi

if [ "$TARGET" == "main" ]; then
  DMT_APPS_TARGET="$HOME/.dmt/apps"
fi

mkdir -p "$DMT_APPS_TARGET"

INTEGRATE="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"

# echo $DIR
# exit

echo
printf "app_base: ${YELLOW}${APP_BASE}${NC}\n"

# sync
if [ $APP_BASE = my-app-base ]; then

printf "${RED}Please open setting.json and change app_base to yours! "
echo ''
echo 'Not Successful'

else
    # before build scripts
    echo
    printf "${GREEN}Changing app_base in svelte configuration:${NC}\n"
    # setBase
    node $INTEGRATE/editBase.js "$APP_ROOT_DIR" "$FRONTEND_DIR"

    # build
    pnpm build

    if [ $? -ne 0 ]; then # error
      echo
      printf "${RED}Build error${NC}\n"
      exit
    fi

    SOURCE_PUBLIC="${APP_ROOT_DIR}/${BUILD}"
    # sync frontend
    if [ "$BUILD" != "undefined" ] && [ -d $SOURCE_PUBLIC ]; then
      mkdir -p "$DMT_APPS_TARGET/$APP_BASE/gui"; cd $_
      dirsync "$SOURCE_PUBLIC" .
    fi

    # DMT-APPS sync
    SOURCE_HOOK="${APP_ROOT_DIR}/${HOOK}"
    # sync backend
    if [ "$HOOK" != "undefined" ] && [ -d $SOURCE_HOOK ]; then
      mkdir -p "$DMT_APPS_TARGET/${APP_BASE}"; cd $_
      # todo: think about if we really need to exclude dmt dir here
      dirsync --exclude dmt --exclude gui --exclude node_modules "$SOURCE_HOOK" .
    fi

    if [ -d "${APP_ROOT_DIR}/dmt" ]; then
      cp -r "${APP_ROOT_DIR}/dmt" .
    fi

    if [ -f "./dmt/dmt-customize" ]; then
      printf "Detected ${YELLOW}dmt-customize${NC} script, executing ...\n"
      ./dmt/dmt-customize
    fi

    if [ -d "dmt" ]; then
      rm -rf dmt
    fi

    pnpm install
    dmt restart

    # resetBase
    node $INTEGRATE/resetBase.js "$APP_ROOT_DIR" "$FRONTEND_DIR"

    echo

    exit

    node dmt/editAppHtml.cjs

    # build
    npm run build

    # after build scripts
    if [ -f dmt/editManifest.cjs ]; then node dmt/editManifest.cjs; fi
    node dmt/resetAppHtml.cjs
    node dmt/resetBase.cjs


    printf "${GREEN}✓ Updated ~/.dmt/apps${NC}\n"

    cd $SOURCE

    # # if we wanted to sync the changes to server then uncomment below and change USERNAME & SERVER_IP
    # echo 'rsync server'
    # rsync -azP "$DMT_APPS/$app_base" "USERNAME@SERVER_IP:/home/USERNAME/.dmt/apps/user/$app_base"

fi
