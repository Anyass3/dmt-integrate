#!/bin/bash

source ~/.dmt/etc/.bash_aliases_bundle # dirsync, colors

APP_ROOT_DIR="`pwd`"

if [ "$1" == "--sync" ]; then
  SYNC_ONLY=true
fi

if [ "$SYNC_ONLY" != true ]; then
  printf "     —— ${CYAN}DMT INTEGRATE${NC} ——\n"
  printf "${GRAY}Integrate apps into DMT ENGINE${NC}\n"
  echo
fi

if [ ! -d "$APP_ROOT_DIR/dmt-install" ]; then
  printf "⚠️  ${RED}Please run inside installable dmt app directory${NC}\n"
  exit
fi

# fully custom install inside dmt-install script, only run that script, nothing else
if [ -f "./dmt-install/dmt-install" ]; then
  printf "${GREEN}Detected ${MAGENTA}dmt-install${NC} script, executing this instead of predefined installer ...${NC}\n"
  printf "${GRAY}${NC}\n"
  ./dmt-install/dmt-install "$@"
  exit
fi

SETTINGS="$APP_ROOT_DIR/dmt-install/settings.json"

if [ ! -f "$SETTINGS" ]; then
  echo $APP_ROOT_DIR
  echo "$(basename $APP_ROOT_DIR)"
  printf "⚠️  ${RED}Missing ${YELLOW}$(basename $APP_ROOT_DIR)/dmt-install/settings.json ${RED}file${NC}\n"
  exit
fi

if [ "$SYNC_ONLY" != true ]; then
  printf "${YELLOW}Settings for ${CYAN}$(basename $APP_ROOT_DIR)${NC} =${NC}\n"
  cat "$SETTINGS"
fi

# variables

APP_BASE="$(node -pe 'JSON.parse(process.argv[1]).app_base' "$(cat $SETTINGS)")"
BUILD="$(node -pe 'JSON.parse(process.argv[1]).build' "$(cat $SETTINGS)")"
TARGET="$(node -pe 'JSON.parse(process.argv[1]).target' "$(cat $SETTINGS)")"

HOOK="dmt"

if [ "$APP_BASE" == "undefined" ]; then
  printf "${RED}app_base not set${NC}\n"
  exit
fi

# dmt user apps dir
DMT_APPS_TARGET="$HOME/.dmt/user/apps"

if [ "$TARGET" == "here" ]; then
  DMT_APPS_TARGET="$HOME/.dmt-here/apps"
fi

if [ "$TARGET" == "main" ]; then
  DMT_APPS_TARGET="$HOME/.dmt/apps"
fi

mkdir -p "$DMT_APPS_TARGET"

INTEGRATE="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"

# echo
# printf "app_base: ${YELLOW}${APP_BASE}${NC}\n"

# sync
if [ $APP_BASE = my-app-base ]; then

  printf "${RED}Please open setting.json and change app_base to yours! "
  echo ''
  echo 'Not Successful'

else
    if [ "$SYNC_ONLY" != true ]; then
      # before build
      echo
      printf "${GREEN}Changing app_base in svelte configuration:${NC}\n"
      # setBase
      node $INTEGRATE/editBase.js "$APP_ROOT_DIR"

      # build
      pnpm build

      # after build

      if [ $? -ne 0 ]; then # error
        # resetBase
        node $INTEGRATE/resetBase.js "$APP_ROOT_DIR"

        echo
        printf "${RED}Build error${NC}\n"
        exit
      fi

      # resetBase
      node $INTEGRATE/resetBase.js "$APP_ROOT_DIR"
    fi

    # sync frontend

    if [ "$BUILD" != "undefined" ] && [ -d $SOURCE_PUBLIC ]; then
      SOURCE_PUBLIC="${APP_ROOT_DIR}/${BUILD}"
      mkdir -p "$DMT_APPS_TARGET/$APP_BASE"; cd $_
      dirsync --exclude dmt "$SOURCE_PUBLIC" .
    fi

    # sync hook

    ORIGIN_HOOK="${APP_ROOT_DIR}/${HOOK}"
    INSTALLED_HOOK="$DMT_APPS_TARGET/${APP_BASE}/dmt"

    if [ -d $ORIGIN_HOOK ]; then
      mkdir -p "$INSTALLED_HOOK"; cd $_
      dirsync "$ORIGIN_HOOK" .
    elif [ -d "$INSTALLED_HOOK" ]; then # hook was deleted
      rm -rf "$INSTALLED_HOOK"
    fi

    if [ "$SYNC_ONLY" != true ]; then

      cd "$DMT_APPS_TARGET/$APP_BASE"

      if [ -f "${APP_ROOT_DIR}/dmt-install/dmt-customize" ]; then
        cp -r "${APP_ROOT_DIR}/dmt-install" .
        printf "Detected ${YELLOW}dmt-customize${NC} script, executing ...\n"
        ./dmt-install/dmt-customize
        rm -rf dmt-install
      fi

      if [ -f "package.json" ]; then
        pnpm install
      fi

      if [ -f "./index.js" ] || [ -f "./dmt/index.js" ]; then
        dmt restart
      fi

    fi

    cd "$APP_ROOT_DIR"

    # node dmt-install/editAppHtml.cjs

    # # build
    # npm run build

    # # after build scripts
    # if [ -f dmt-install/editManifest.cjs ]; then node dmt-install/editManifest.cjs; fi
    # node dmt-install/resetAppHtml.cjs
    # node dmt-install/resetBase.cjs


    # printf "${GREEN}✓ Updated ~/.dmt/apps${NC}\n"

    # cd $SOURCE

    # # if we wanted to sync the changes to server then uncomment below and change USERNAME & SERVER_IP
    # echo 'rsync server'
    # rsync -azP "$DMT_APPS/$app_base" "USERNAME@SERVER_IP:/home/USERNAME/.dmt/apps/user/$app_base"

fi
